Document: {
	header(DocumentHeader): {},
	body(DocumentBody): {
		ElementNode: {
			name: html,
			type: Normal,
			children: [
				ElementNode: {
					name: head,
					type: Normal,
					children: [
						TextNode: {
							textValue: 03
						    ,
						},
						ElementNode: {
							name: ul,
							type: Normal,
							children: [
							],
							attributes: [
								AttributeNode: {
									attribute: class,
									value: "navProvider",
								},
								Directive: {
									type: cp-if,
									value(ReferenceExpression): {
										reference: isauth,
									},
								}
							],
						},
					],
					attributes: [
						Directive: {
							type: cp-app,
							value(ReferenceExpression): {
								reference: myapp,
							},
						}
					],
				},
				ElementNode: {
					name: body,
					type: Normal,
					children: [
						ElementNode: {
							name: div,
							type: Normal,
							children: [
								TextNode: {
									textValue: 50
								    ,
								},
								ElementNode: {
									name: ul,
									type: Normal,
									children: [
									],
									attributes: [
										AttributeNode: {
											attribute: class,
											value: "navProvider",
										},
										Directive: {
											type: cp-show,
											value(FunctionCallExpression): {
												function(ReferenceExpression): {
													reference: showItem,
												},
											},
										}
									],
								},
								ElementNode: {
									name: ul,
									type: Normal,
									children: [
										ElementNode: {
											name: li,
											type: Normal,
											children: [
												MustachNode: {
													Exp(ReferenceExpression): {
														reference: i,
													},
												},
												TextNode: {
													textValue:  : ,
												},
												MustachNode: {
													Exp(MinusExpression): {
														leftOprand(AdditionExpression): {
															leftOprand(ReferenceExpression): {
																reference: i,
															},
															rightOprand(ReferenceExpression): {
																reference: x,
															},
														},
														rightOprand(NumberLiteral): {
															value: 3.0,
														},
													},
												}
											],
											attributes: [],
										},
									],
									attributes: [
										AttributeNode: {
											attribute: class,
											value: "navProvider",
										},
										Directive: {
											type: cp-show,
											value(FunctionCallExpression): {
												function(ReferenceExpression): {
													reference: showItem,
												},
											},
										}
									],
								},
							],
							attributes: [
								Directive: {
									type: cp-app,
									value(ReferenceExpression): {
										reference: myapp2,
									},
								}
							],
						},
					],
					attributes: [],
				},
			],
			attributes: [],
		},
	},
}