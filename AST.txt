Document: {
	header(DocumentHeader): {,
		TextNode: {
			textValue: <!DOCTYPE html>,
		},,
	},
	body(DocumentBody): {
		ElementNode: {
			name: html,
			type: Normal,
			children: [
				ElementNode: {
					name: head,
					type: Normal,
					children: [
						ElementNode: {
							name: title,
							type: Normal,
							children: [
								TextNode: {
									textValue: Sample 7 everything,
								}
							],
							attributes: [
								AttributeNode: {
									attribute: id,
									value: "title723074861",
								}
							],
						},
					],
					attributes: [
						AttributeNode: {
							attribute: id,
							value: "head1670675563",
						}
					],
				},
				ElementNode: {
					name: body,
					type: Normal,
					children: [
						ElementNode: {
							name: div,
							type: Normal,
							children: [
								ElementNode: {
									name: span,
									type: Normal,
									children: [
										TextNode: {
											textValue: Id,
										}
									],
									attributes: [
										AttributeNode: {
											attribute: id,
											value: "span225534817",
										}
									],
								},
								ElementNode: {
									name: input,
									type: SelfClosed,
									attributes: [
										AttributeNode: {
											attribute: type,
											value: "number",
										},
										Directive: {
											type: cp-model,
											value(AccessExpression): {
												object(ReferenceExpression): {
													reference: newObj,
												},
												method(AccessByProperty): {
													property: newId,
												},
											},
										},
										AttributeNode: {
											attribute: id,
											value: "input1878246837",
										}
									],
								},
								ElementNode: {
									name: br,
									type: SelfClosed,
									attributes: [
										AttributeNode: {
											attribute: id,
											value: "br929338653",
										}
									],
								},
								ElementNode: {
									name: span,
									type: Normal,
									children: [
										TextNode: {
											textValue: Name,
										}
									],
									attributes: [
										AttributeNode: {
											attribute: id,
											value: "span1259475182",
										}
									],
								},
								ElementNode: {
									name: input,
									type: SelfClosed,
									attributes: [
										AttributeNode: {
											attribute: type,
											value: "text",
										},
										Directive: {
											type: cp-model,
											value(AccessExpression): {
												object(ReferenceExpression): {
													reference: newObj,
												},
												method(AccessByProperty): {
													property: newName,
												},
											},
										},
										AttributeNode: {
											attribute: id,
											value: "input1300109446",
										}
									],
								},
								ElementNode: {
									name: br,
									type: SelfClosed,
									attributes: [
										AttributeNode: {
											attribute: id,
											value: "br1020371697",
										}
									],
								},
								ElementNode: {
									name: span,
									type: Normal,
									children: [
										TextNode: {
											textValue: Date,
										}
									],
									attributes: [
										AttributeNode: {
											attribute: id,
											value: "span789451787",
										}
									],
								},
								ElementNode: {
									name: input,
									type: SelfClosed,
									attributes: [
										AttributeNode: {
											attribute: type,
											value: "date",
										},
										Directive: {
											type: cp-model,
											value(AccessExpression): {
												object(ReferenceExpression): {
													reference: newObj,
												},
												method(AccessByProperty): {
													property: newDate,
												},
											},
										},
										AttributeNode: {
											attribute: id,
											value: "input1950409828",
										}
									],
								},
								ElementNode: {
									name: br,
									type: SelfClosed,
									attributes: [
										AttributeNode: {
											attribute: id,
											value: "br1229416514",
										}
									],
								},
								ElementNode: {
									name: button,
									type: Normal,
									children: [
										TextNode: {
											textValue: Add,
										}
									],
									attributes: [
										Directive: {
											type: @click,
											value(FunctionCallExpression): {
												function(ReferenceExpression): {
													reference: addSt,
												},
											},
										},
										AttributeNode: {
											attribute: id,
											value: "button2016447921",
										}
									],
								},
							],
							attributes: [
								AttributeNode: {
									attribute: id,
									value: "div1304836502",
								}
							],
						},
						ElementNode: {
							name: div,
							type: Normal,
							children: [
								ElementNode: {
									name: span,
									type: Normal,
									children: [
										TextNode: {
											textValue: the new St id: ,
										},
										MustachNode: {
											Exp(AccessExpression): {
												object(ReferenceExpression): {
													reference: newAddedSt,
												},
												method(AccessByProperty): {
													property: newId,
												},
											},
										}
									],
									attributes: [
										AttributeNode: {
											attribute: id,
											value: "span1414644648",
										}
									],
								},
								ElementNode: {
									name: span,
									type: Normal,
									children: [
										TextNode: {
											textValue: the new St Name: ,
										},
										MustachNode: {
											Exp(FilterStatement): {
												Oprand(AccessExpression): {
													object(ReferenceExpression): {
														reference: newAddedSt,
													},
													method(AccessByProperty): {
														property: newId,
													},
												},
												FilterMethod(ReferenceExpression): {
													reference: lower,
												},
											},
										}
									],
									attributes: [
										AttributeNode: {
											attribute: id,
											value: "span640070680",
										}
									],
								},
								ElementNode: {
									name: span,
									type: Normal,
									children: [
										TextNode: {
											textValue: the new St Date: ,
										},
										MustachNode: {
											Exp(FilterStatement): {
												Oprand(AccessExpression): {
													object(ReferenceExpression): {
														reference: newAddedSt,
													},
													method(AccessByProperty): {
														property: newId,
													},
												},
												FilterMethod(ReferenceExpression): {
													reference: date,
												},
												parameters: [
													StringLiteral: {
														value: dd/mm/yyyy,
													}
												],
											},
										}
									],
									attributes: [
										AttributeNode: {
											attribute: id,
											value: "span1510467688",
										}
									],
								},
								CommentNode: {
									comment: <!-- any date format you want  -->,
									type: Normal,
								},
							],
							attributes: [
								Directive: {
									type: cp-if,
									value(AccessExpression): {
										object(ReferenceExpression): {
											reference: newAddedSt,
										},
										method(AccessByProperty): {
											property: Id,
										},
									},
								},
								AttributeNode: {
									attribute: id,
									value: "div666988784",
								}
							],
						},
						ElementNode: {
							name: table,
							type: Normal,
							children: [
								ElementNode: {
									name: thead,
									type: Normal,
									children: [
										ElementNode: {
											name: th,
											type: Normal,
											children: [
												MustachNode: {
													Exp(ReferenceExpression): {
														reference: k,
													},
												}
											],
											attributes: [
												Directive: {
													type: cp-for,
													value(ObjectLoopStatement): {
														valueVariable: v,
														keyVariable: k,
														loopOn(AccessExpression): {
															object(ReferenceExpression): {
																reference: obj,
															},
															method(AccessByIndex): {
																index(NumberLiteral): {
																	value: 0.0,
																},
															},
														},
													},
												},
												AttributeNode: {
													attribute: id,
													value: "th1072591677",
												}
											],
										},
									],
									attributes: [
										AttributeNode: {
											attribute: id,
											value: "thead746292446",
										}
									],
								},
								ElementNode: {
									name: tr,
									type: Normal,
									children: [
										ElementNode: {
											name: td,
											type: Normal,
											children: [
												MustachNode: {
													Exp(AccessExpression): {
														object(ReferenceExpression): {
															reference: st,
														},
														method(AccessByIndex): {
															index(ReferenceExpression): {
																reference: s,
															},
														},
													},
												}
											],
											attributes: [
												Directive: {
													type: cp-for,
													value(ArrayLoopStatement): {
														loopVariable: s,
														indexed: false,
														loopOn(ReferenceExpression): {
															reference: st,
														},
													},
												},
												AttributeNode: {
													attribute: id,
													value: "td1175962212",
												}
											],
										},
									],
									attributes: [
										Directive: {
											type: cp-for,
											value(ArrayLoopStatement): {
												loopVariable: st,
												indexed: false,
												loopOn(ReferenceExpression): {
													reference: obj,
												},
											},
										},
										AttributeNode: {
											attribute: id,
											value: "tr1523554304",
										}
									],
								},
							],
							attributes: [
								AttributeNode: {
									attribute: id,
									value: "table1995265320",
								}
							],
						},
						ElementNode: {
							name: ul,
							type: Normal,
							children: [
								ElementNode: {
									name: li,
									type: Normal,
									children: [
										MustachNode: {
											Exp(ReferenceExpression): {
												reference: k,
											},
										},
										TextNode: {
											textValue:  = ,
										},
										MustachNode: {
											Exp(ReferenceExpression): {
												reference: v,
											},
										}
									],
									attributes: [
										Directive: {
											type: cp-for,
											value(ObjectLoopStatement): {
												valueVariable: v,
												keyVariable: k,
												loopOn(ReferenceExpression): {
													reference: st,
												},
											},
										},
										AttributeNode: {
											attribute: id,
											value: "li1670675563",
										}
									],
								},
							],
							attributes: [
								Directive: {
									type: cp-for,
									value(ArrayLoopStatement): {
										loopVariable: st,
										indexed: false,
										loopOn(ReferenceExpression): {
											reference: obj,
										},
									},
								},
								AttributeNode: {
									attribute: id,
									value: "ul1725154839",
								}
							],
						},
						ScriptNode: {
							content: <script>
						        function forthyear() {
						            let scope = this;
						            scope.newObj = {};
						            scope.newAddedSt = {};
						            scope.obj = [
						                { id: 1, name: "St1", birthdate: new Date() },
						                { id: 2, name: "St2", birthdate: new Date() },
						                { id: 3, name: "St3", birthdate: new Date() },
						                { id: 4, name: "St4", birthdate: new Date() },
						                { id: 5, name: "St5", birthdate: new Date() },
						                { id: 6, name: "St6", birthdate: new Date() },
						            ]
						            scope.addSt = function () {
						                scope.newAddedSt = Object.assign({}, scope.newObj)
						                scope.obj.push(Object.assign({}, scope.newObj));
						                scope.newObj = {};
						            }
						        };
						
						        var forthyear = new forthyear();
						
						    </script>,
						},
					],
					attributes: [
						Directive: {
							type: cp-app,
							value(ReferenceExpression): {
								reference: forthyear,
							},
						},
						AttributeNode: {
							attribute: id,
							value: "body895328852",
						}
					],
				},
			],
			attributes: [
				AttributeNode: {
					attribute: lang,
					value: "en",
				},
				AttributeNode: {
					attribute: id,
					value: "html1725154839",
				}
			],
		},
	},
}